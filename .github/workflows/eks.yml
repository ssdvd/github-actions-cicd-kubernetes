# NOME DA ROTINA
name: kubernetes

# QUANDO SER√Å EXECUTADO: NA CHAMADA DO ARQUIVO
on:
  workflow_call:

# TAREFAS
jobs:
   kubernetes:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Autenticando credenciais AWS
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-2

      - run: git clone https://github.com/ssdvd/Infra_CI_Kubernetes.git

      - name: HashiCorp - Setup Terraform
        uses: hashicorp/setup-terraform@v2.0.3

      - run: terraform -chdir=Infra_CI_Kubernetes/env/Homolog init

      - run: terraform -chdir=Infra_CI_Kubernetes/env/Homolog destroy -auto-approve
      - run: return 1
      - run: terraform -chdir=Infra_CI_Kubernetes/env/Homolog apply -auto-approve

      - run: echo "$(terraform -chdir=Infra_CI_Kubernetes/env/Homolog apply output -raw IP_db)"
        id: URL

      - name: Kubectl tool installer
        uses: Azure/setup-kubectl@v3

      - run: aws sts get-caller-identity

      - run: aws eks update-kubeconfig --region us-east-2 --name homolog2

      - run: kubectl get svc

      - run: kubectl create secret generic dbhost --from-literal=HOST=${{secrets.DBHOST}}
      - run: kubectl create secret generic dbport --from-literal=DBPORT=${{secrets.DBPORT}}
      - run: kubectl create secret generic dbuser --from-literal=USER=${{secrets.DBUSER}}
      - run: kubectl create secret generic dbpassword --from-literal=PASSWORD=${{secrets.DBPASSWORD}}
      - run: kubectl create secret generic dbname --from-literal=DBNAME=${{secrets.DBNAME}}
      - run: kubectl create secret generic port --from-literal=PORT=8000